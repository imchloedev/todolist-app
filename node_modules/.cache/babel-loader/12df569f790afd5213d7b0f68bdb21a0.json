{"ast":null,"code":"var _jsxFileName = \"/Users/eunjikang/todolist-app/src/components/TodoInsert.js\",\n    _s = $RefreshSig$();\n\nimport \"./TodoInsert.scss\";\nimport { MdAdd } from \"react-icons/md\";\nimport { useCallback, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoInsert = _ref => {\n  _s();\n\n  let {\n    onInsert\n  } = _ref;\n  const [value, setValue] = useState(\"\");\n  const onChange = useCallback(e => {\n    setValue(e.target.value);\n  }, []); //useCallback 을 통해서 TodoInsert 함수 컴포넌트가 불려질 때마다 onChange 함수를 계속해서 새로 생성하는 것(메모리를 계속해서 새로 만들어서 성능을 안좋게 만든다.)이 아니라 첫 렌더링 때만 함수를 만들고, 재사용한다. \n\n  const onSubmit = useCallback(e => {\n    onInsert(value);\n    setValue('');\n    e.preventDefualt();\n  }, [onInsert, value]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"TodoInsert\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Insert here\",\n        value: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(MdAdd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoInsert, \"um3TzJra/ZSdLkFoJF8fS0gVvQI=\");\n\n_c = TodoInsert;\nexport default TodoInsert;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoInsert\");","map":{"version":3,"names":["MdAdd","useCallback","useState","TodoInsert","onInsert","value","setValue","onChange","e","target","onSubmit","preventDefualt"],"sources":["/Users/eunjikang/todolist-app/src/components/TodoInsert.js"],"sourcesContent":["import \"./TodoInsert.scss\";\nimport { MdAdd } from \"react-icons/md\";\nimport { useCallback, useState } from \"react\";\n\nconst TodoInsert = ({onInsert}) => {\n  const [value, setValue] = useState(\"\");\n\n  const onChange = useCallback(\n    e => {\n      setValue(e.target.value);\n    }, []);\n    //useCallback 을 통해서 TodoInsert 함수 컴포넌트가 불려질 때마다 onChange 함수를 계속해서 새로 생성하는 것(메모리를 계속해서 새로 만들어서 성능을 안좋게 만든다.)이 아니라 첫 렌더링 때만 함수를 만들고, 재사용한다. \n\n  const onSubmit = useCallback(\n    e => {\n      onInsert(value);\n      setValue('');\n      e.preventDefualt();\n    },[onInsert, value]);\n\n  return (\n    <div>\n      <form className=\"TodoInsert\" >\n        <input type=\"text\" placeholder=\"Insert here\" value={value} onChange={onChange} />\n        <button type=\"submit\">\n          <MdAdd></MdAdd>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TodoInsert;\n"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;;;AAEA,MAAMC,UAAU,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACjC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EAEA,MAAMK,QAAQ,GAAGN,WAAW,CAC1BO,CAAC,IAAI;IACHF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;EACD,CAHyB,EAGvB,EAHuB,CAA5B,CAHiC,CAO/B;;EAEF,MAAMK,QAAQ,GAAGT,WAAW,CAC1BO,CAAC,IAAI;IACHJ,QAAQ,CAACC,KAAD,CAAR;IACAC,QAAQ,CAAC,EAAD,CAAR;IACAE,CAAC,CAACG,cAAF;EACD,CALyB,EAKxB,CAACP,QAAD,EAAWC,KAAX,CALwB,CAA5B;EAOA,oBACE;IAAA,uBACE;MAAM,SAAS,EAAC,YAAhB;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,WAAW,EAAC,aAA/B;QAA6C,KAAK,EAAEA,KAApD;QAA2D,QAAQ,EAAEE;MAArE;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,IAAI,EAAC,QAAb;QAAA,uBACE,QAAC,KAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAUD,CA1BD;;GAAMJ,U;;KAAAA,U;AA4BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}